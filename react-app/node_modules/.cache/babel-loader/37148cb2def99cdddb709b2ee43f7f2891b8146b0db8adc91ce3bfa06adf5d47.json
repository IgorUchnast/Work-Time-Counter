{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barte\\\\Desktop\\\\Studia\\\\sem5\\\\PBL5\\\\Work-Time-Counter\\\\react-app\\\\src\\\\components\\\\Sidebar\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport SidebarGroup from \"./SidebarGroup\";\nimport { getEmployees, getProjects } from \"../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  // const [employees, setEmployees] = useState([])\n  // const [projects, setProjects] = useState([])\n  // const [error, setError] = useState(null)\n\n  // Stany kontrolujące rozwinięcie sekcji\n  const [showEmployees, setShowEmployees] = useState(false);\n  const [showProjects, setShowProjects] = useState(false);\n\n  // Funkcje przełączające widoczność sekcji\n  const toggleEmployees = () => setShowEmployees(!showEmployees);\n  const toggleProjects = () => setShowProjects(!showProjects);\n\n  // useEffect(() => {\n  //     Promise.all([getEmployees(), getProjects()])\n  //         .then((employeesResponse, projectsResponse) => {\n  //             setEmployees(employeesResponse.data)\n  //             setProjects(projectsResponse.data)\n  //         })\n  //         .catch((err) => {\n  //             console.error(\"Error fetching data:\", err)\n  //             setError(\"Nie udało się pobrać danych\")\n  //         })\n  // }, [])\n\n  // if(error) return <div className=\"error\">{error}</div>\n\n  // if(!employees.length) return <div>Ładowanie pracowników...</div>\n  // if(!projects.length) return <div>Ładowanie projektów...</div>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"250px\",\n      backgroundColor: \"#f8f9fa\",\n      padding: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-3\",\n      children: \"WorkChrono\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"row\",\n      children: \"WorkChrono\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"light\",\n      onClick: toggleEmployees,\n      \"aria-controls\": \"employees-list\",\n      \"aria-expanded\": showEmployees,\n      className: \"w-100 text-start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SidebarGroup, {\n      title: \"Pracownicy\"\n      // items={employees.map((employee) => `${employee.first_name} ${employee.last_name}`)}\n      ,\n      items: [\"Zadania\", \"Projekty\", \"Spotkania\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SidebarGroup, {\n      title: \"Projekty\"\n      // items={projects.map((project) => project.title)} \n      ,\n      items: [\"Zadania\", \"Projekty\", \"Spotkania\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Sidebar, \"gyTyVjrqoOLz5XixEmlDq3Wdm/U=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["useEffect","useState","SidebarGroup","getEmployees","getProjects","jsxDEV","_jsxDEV","Sidebar","_s","showEmployees","setShowEmployees","showProjects","setShowProjects","toggleEmployees","toggleProjects","style","width","backgroundColor","padding","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Button","variant","onClick","title","items","_c","$RefreshReg$"],"sources":["C:/Users/barte/Desktop/Studia/sem5/PBL5/Work-Time-Counter/react-app/src/components/Sidebar/Sidebar.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport SidebarGroup from \"./SidebarGroup\"\r\nimport { getEmployees, getProjects } from \"../../api\"\r\n\r\nconst Sidebar = () => {\r\n    // const [employees, setEmployees] = useState([])\r\n    // const [projects, setProjects] = useState([])\r\n    // const [error, setError] = useState(null)\r\n\r\n    // Stany kontrolujące rozwinięcie sekcji\r\n    const [showEmployees, setShowEmployees] = useState(false);\r\n    const [showProjects, setShowProjects] = useState(false);\r\n\r\n    // Funkcje przełączające widoczność sekcji\r\n    const toggleEmployees = () => setShowEmployees(!showEmployees);\r\n    const toggleProjects = () => setShowProjects(!showProjects);\r\n\r\n    // useEffect(() => {\r\n    //     Promise.all([getEmployees(), getProjects()])\r\n    //         .then((employeesResponse, projectsResponse) => {\r\n    //             setEmployees(employeesResponse.data)\r\n    //             setProjects(projectsResponse.data)\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.error(\"Error fetching data:\", err)\r\n    //             setError(\"Nie udało się pobrać danych\")\r\n    //         })\r\n    // }, [])\r\n\r\n    // if(error) return <div className=\"error\">{error}</div>\r\n\r\n    // if(!employees.length) return <div>Ładowanie pracowników...</div>\r\n    // if(!projects.length) return <div>Ładowanie projektów...</div>\r\n\r\n    return (\r\n        <div style={{ width: \"250px\", backgroundColor: \"#f8f9fa\", padding: \"10px\" }}>\r\n            <h4 className=\"mb-3\">WorkChrono</h4>\r\n            <h2 className=\"row\">WorkChrono</h2>\r\n            <Button\r\n                variant=\"light\"\r\n                onClick={toggleEmployees}\r\n                aria-controls=\"employees-list\"\r\n                aria-expanded={showEmployees}\r\n                className=\"w-100 text-start\"\r\n            ></Button>\r\n            <SidebarGroup\r\n                title=\"Pracownicy\"\r\n                // items={employees.map((employee) => `${employee.first_name} ${employee.last_name}`)}\r\n                items={[\"Zadania\", \"Projekty\", \"Spotkania\"]}\r\n            />\r\n            <SidebarGroup \r\n                title=\"Projekty\" \r\n                // items={projects.map((project) => project.title)} \r\n                items={[\"Zadania\", \"Projekty\", \"Spotkania\"]}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,YAAY,EAAEC,WAAW,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA;EACA;;EAEA;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAMY,eAAe,GAAGA,CAAA,KAAMH,gBAAgB,CAAC,CAACD,aAAa,CAAC;EAC9D,MAAMK,cAAc,GAAGA,CAAA,KAAMF,eAAe,CAAC,CAACD,YAAY,CAAC;;EAE3D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;;EAEA,oBACIL,OAAA;IAAKS,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,eAAe,EAAE,SAAS;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACxEb,OAAA;MAAIc,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpClB,OAAA;MAAIc,SAAS,EAAC,KAAK;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnClB,OAAA,CAACmB,MAAM;MACHC,OAAO,EAAC,OAAO;MACfC,OAAO,EAAEd,eAAgB;MACzB,iBAAc,gBAAgB;MAC9B,iBAAeJ,aAAc;MAC7BW,SAAS,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACVlB,OAAA,CAACJ,YAAY;MACT0B,KAAK,EAAC;MACN;MAAA;MACAC,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFlB,OAAA,CAACJ,YAAY;MACT0B,KAAK,EAAC;MACN;MAAA;MACAC,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,WAAW;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAhB,EAAA,CArDKD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AAuDb,eAAeA,OAAO;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}